<?xml version="1.0" encoding="UTF-8"?>
<!--Skin variables only for TempEvo-->
<includes>
	<variable name="TempEvoListHasSorted">
		<value condition="Container.Sortmethod(1)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(2)">$INFO[ListItem.Date]</value>
		<value condition="Container.Sortmethod(3)">$INFO[ListItem.Size]</value>
		<value condition="Container.Sortmethod(4)">$INFO[ListItem.FileName]</value>
		<value condition="Container.Sortmethod(5)">$INFO[ListItem.Path]</value>
		<value condition="Container.Sortmethod(6)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(7)">$INFO[ListItem.TrackNumber,, - ]$INFO[ListItem.Genre]</value>
		<value condition="Container.Sortmethod(8)">$INFO[ListItem.TrackNumber]</value>
		<value condition="Container.Sortmethod(9)">$INFO[ListItem.EndTime]</value>
		<value condition="Container.Sortmethod(10)">$INFO[ListItem.TrackNumber]</value>
		<value condition="Container.Sortmethod(11)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Sortmethod(12)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(13)">$INFO[ListItem.AlbumStatus]</value>
		<value condition="Container.Sortmethod(14)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Sortmethod(15)">$INFO[ListItem.Country]</value>
		<value condition="Container.Sortmethod(16)">$INFO[ListItem.Year]</value>
		<value condition="Container.Sortmethod(17)">$INFO[ListItem.Rating]</value>
		<value condition="Container.Sortmethod(18)">$INFO[ListItem.UserRating]</value>
		<value condition="Container.Sortmethod(19)">$INFO[ListItem.Votes]</value>
		<value condition="Container.Sortmethod(20)">$INFO[ListItem.Top250]</value>
		<value condition="Container.Sortmethod(21)">$INFO[ListItem.ProgramCount]</value>
		<value condition="Container.Sortmethod(22)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(23)">$INFO[ListItem.Property(NumEpisodes)]</value>
		<value condition="Container.Sortmethod(24)">$INFO[ListItem.Season]</value>
		<value condition="Container.Sortmethod(25)">$INFO[ListItem.Property(NumEpisodes)]</value>
		<value condition="Container.Sortmethod(26)">$INFO[ListItem.ListItem.Property(WatchedEpisodes)]</value>
		<value condition="Container.Sortmethod(27)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(28)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(29)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(30)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(31)">$INFO[ListItem.MPAA]</value>
		<value condition="Container.Sortmethod(32)">$INFO[ListItem.VideoResolution]</value>
		<value condition="Container.Sortmethod(33)">$INFO[ListItem.VideoCodec]</value>
		<value condition="Container.Sortmethod(34)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(35)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(36)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(37)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(38)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(39)">$INFO[ListItem.Studio]</value>
		<value condition="Container.Sortmethod(40)">$INFO[ListItem.DateAdded]</value>
		<value condition="Container.Sortmethod(41)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(42)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(43)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(44)">$INFO[ListItem.Bitrate]</value>
		<value condition="Container.Sortmethod(45)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(46)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(47)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(48)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(49)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(50)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(51)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(52)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(53)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(54)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(55)">$INFO[ListItem.Label]</value>
		<value condition="Container.Sortmethod(56)">$INFO[ListItem.Label]</value>
	</variable>
	<variable name="TempEvoPreviewScrapRes">
		<value condition="String.IsEqual(Skin.AspectRatio,21:9)">shape/ratio-review/landscape21-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,19.5:9)">shape/ratio-review/landscape18-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,18.5:9))">shape/ratio-review/landscape18-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,18:9)">shape/ratio-review/landscape18-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,17:9)">shape/ratio-review/landscape17-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,16:9)">shape/ratio-review/landscape16-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,15:9)">shape/ratio-review/landscape15-9.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,16:10)">shape/ratio-review/landscape16-10.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,3:2)">shape/ratio-review/landscape3-2.png</value>
		<value condition="String.IsEqual(Skin.AspectRatio,4:3)">shape/ratio-review/landscape4-3.png</value>
	</variable>
	<variable name="TempEvoSecTitleMediaLab">
		<value condition="Player.HasAudio">$LOCALIZE[31012]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes)">$LOCALIZE[31012] $INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,]</value>
		<value condition="Player.HasVideo + !Player.HasDuration + Player.IsInternetStream">[COLOR 80FF0000]$LOCALIZE[19664][/COLOR]</value>
		<value condition="Player.HasVideo">$LOCALIZE[31012]</value>
		<value>Unknown</value>
	</variable>
	<variable name="TempEvoMediaFullscreenWatermarkSubTitle">
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv) + Skin.HasSetting(TempEvoMuVizhasAnimatedBackground)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv) + !Skin.HasSetting(TempEvoMuVizhasAnimatedBackground)">$INFO[MusicPlayer.Title]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">(EPG) $LOCALIZE[10005]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="Player.HasVideo + [VideoPlayer.Content(MusicVideos) | !String.IsEmpty(VideoPlayer.Artist)]">$INFO[VideoPlayer.Artist]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !String.IsEmpty(Player.ChapterName)">$INFO[Player.ChapterName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)">$INFO[Player.Time]</value>
		<value>$INFO[System.Date]</value>
	</variable>
	<variable name="TempEvoMediaFullscreenWatermarkTitle">
		<value condition="Player.HasAudio + Skin.HasSetting(TempEvoMuVizhasAnimatedBackground)">$INFO[MusicPlayer.Title]</value>
		<value condition="Player.HasAudio + !Skin.HasSetting(TempEvoMuVizhasAnimatedBackground)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Artist) + String.IsEmpty(VideoPlayer.Title)">$INFO[Player.Title]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value>$INFO[System.Time]</value>
	</variable>
	<variable name="TempEvoNextMediaLab">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.offset(1).Title]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.offset(1).Title]</value>
		<value>$INFO[Player.offset(1).Title]</value>
	</variable>
	<variable name="TempEvoIconMediaNotif">
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv)"></value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(MusicVideos)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)"></value>
		<value></value>
	</variable>
	<variable name="TempEvoSubIconMediaNotif">
		<value condition="Player.HasAudio">$LOCALIZE[31096]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)">$LOCALIZE[31101]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$LOCALIZE[31093]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$LOCALIZE[31100]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$LOCALIZE[31090]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(MusicVideos)">$LOCALIZE[31095]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[31123]</value>
		<value>$LOCALIZE[555]</value>
	</variable>
	<variable name="TempEvoSubTitleMediaNotif">
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">(EPG) $LOCALIZE[10005]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="Player.HasVideo + [VideoPlayer.Content(MusicVideos) | !String.IsEmpty(VideoPlayer.Artist)]">$INFO[VideoPlayer.Artist]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)">$INFO[Player.Time]</value>
		<value>$INFO[System.Date]</value>
	</variable>
	<variable name="TempEvoTitleMediaNotif">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value>$INFO[System.Time]</value>
	</variable>
	<variable name="TempEvoSubNextMediaNotif">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.offset(1).Season,S,]$INFO[VideoPlayer.offset(1).Episode,E, | ]$INFO[VideoPlayer.offset(1).Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$INFO[VideoPlayer.offset(1).Year]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.offset(1).Artist]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)">$INFO[Player.Time]</value>
		<value>142</value>
	</variable>
	<variable name="TempEvoNextMediaNotif">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.offset(1).Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes)">$INFO[VideoPlayer.offset(1).TVShowTitle]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.offset(1).Title]</value>
		<value>[B]$INFO[System.Time][/B]</value>
	</variable>
	<variable name="PlayStaTempEvoLabel">
		<value condition="Player.Caching">$LOCALIZE[15107] $INFO[Player.CacheLevel]%</value>
        	<value condition="[PVR.IsRecordingPlayingChannel + !Player.ChannelPreviewActive] | PVR.IsPlayingActiveRecording">$LOCALIZE[19158]</value>
		<value condition="!String.IsEmpty(PVR.ChannelNumberInput)">$INFO[PVR.ChannelNumberInput]</value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)">$INFO[Player.SeekNumeric(hh:mm:ss)]</value>
		<value condition="Player.Seeking + VideoPlayer.HasEPG">$INFO[PVR.EpgEventSeekTime]$INFO[PVR.EpgEventDuration, / ]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$LOCALIZE[773] $INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset) + Player.DisplayAfterSeek">$LOCALIZE[773] $INFO[Player.SeekOffset]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="PlayStaTempEvoIcon">
        	<value condition="[PVR.IsRecordingPlayingChannel + !Player.ChannelPreviewActive] | PVR.IsPlayingActiveRecording"></value>
		<value condition="!String.IsEmpty(PVR.ChannelNumberInput)"></value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)"></value>
		<value condition="Player.Seeking + VideoPlayer.HasEPG"></value>
		<value condition="Player.Seeking"></value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)"></value>
		<value condition="!String.IsEmpty(Player.SeekOffset) + Player.DisplayAfterSeek"></value>
		<value condition="Player.Paused"></value>
		<value condition="Player.Forwarding"></value>
		<value condition="Player.Rewinding"></value>
		<value condition="Player.IsTempo"></value>
	</variable>
	<variable name="TempEvoVideoInfoMainLabel">
		<value condition="String.IsEqual(ListItem.DBType,set)">$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Year, (,)]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Year, (,)]</value>
		<value>$INFO[ListItem.Label]$INFO[ListItem.Year, (,)]</value>
	</variable>
	<variable name="TempEvoVideoInfoSubLabel">
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E,: ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Tagline]</value>
		<value condition="String.IsEqual(ListItem.DBType,musicvideo)">$INFO[ListItem.Artist]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="TempEvoVideoInfoPlayButtonLabel">
		<value condition="String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,set)">$LOCALIZE[1024]</value>
		<value>$LOCALIZE[208]</value>
	</variable>
	<variable name="TempEvoSecTitleMediaFullscreen">
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Episode)">$INFO[VideoPlayer.NextTitle,$LOCALIZE[209]: ,]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.Season,$LOCALIZE[20373] , ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ,]$INFO[VideoPlayer.EpisodeName, - ,]</value>
		<value condition="Player.HasVideo + !String.IsEmpty(VideoPlayer.Episode)">$INFO[VideoPlayer.Season,$LOCALIZE[20373] , ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ,]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Country]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Album]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)"></value>
		<value condition="Player.HasVideo + !String.IsEmpty(VideoPlayer.mpaa)">$INFO[VideoPlayer.mpaa]</value>
		<value></value>
	</variable>
	<variable name="TempEvoSubTitleMediaFullscreen">
		<value condition="Player.HasAudio + !MusicPlayer.Content(livetv)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + MusicPlayer.Content(livetv)"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">(EPG) $LOCALIZE[10005]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="Player.HasVideo + [VideoPlayer.Content(MusicVideos) | !String.IsEmpty(VideoPlayer.Artist)]">$INFO[VideoPlayer.Artist]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(Files) + !VideoPlayer.Content(LiveTV)">$INFO[Player.Time]</value>
		<value>No Media</value>
	</variable>
	<variable name="TempEvoTitleMediaFullscreen">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.Title)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value>No Media</value>
	</variable>
    <variable name="TempEvoUserRatingMusic">
        <value condition="String.IsEqual(MusicPlayer.UserRating,1)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,2)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,3)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,4)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,5)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,6)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,7)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,8)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,9)">         </value>
        <value condition="String.IsEqual(MusicPlayer.UserRating,10)">         </value>
        <value>         </value>
    </variable>
    <variable name="TempEvoItemRating">
        <value condition="String.IsEqual(ListItem.Rating,1)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,2)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,3)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,4)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,5)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,6)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,7)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,8)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,9)">         </value>
        <value condition="String.IsEqual(ListItem.Rating,10)">         </value>
        <value>         </value>
    </variable>
	<variable name="TempEvoAutoCompletionContentVar">
		<value condition="System.AddonIsEnabled(plugin.program.autocompletion) + !System.HasHiddenInput">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=4</value>
	</variable>
	<variable name="TempEvoDialSelectVideoStreamLabelVar">
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39106], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39106], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)">$LOCALIZE[39111], $LOCALIZE[39106]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39106], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39106], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)">$LOCALIZE[39106]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)">$LOCALIZE[39111]</value>
	</variable>
	<variable name="TempEvoVideoTitleHeader">
		<value condition="String.Contains(container.folderpath,library://video/movies/) | String.Contains(container.folderpath,videodb://movies/)">$LOCALIZE[31090]</value>
		<value condition="String.Contains(container.folderpath,library://video/tvshows/) | String.Contains(container.folderpath,videodb://tvshows/)">$LOCALIZE[31093]</value>
		<value condition="String.Contains(container.folderpath,library://video/musicvideos/) | String.Contains(container.folderpath,videodb://musicvideos/)">$LOCALIZE[31095]</value>
	</variable>
	<variable name="TempEvoMusicTitleHeader">
		<value condition="$EXP[TempEvoMusicAlbumMostLiked]">$LOCALIZE[31514]</value>
		<value condition="$EXP[TempEvoMusicAlbumLastAdded]">$LOCALIZE[31513]</value>
		<value condition="$EXP[TempEvoMusicAlbumMostPlayed]">$LOCALIZE[31512]</value>
		<value condition="$EXP[TempEvoMusicAlbumLastPlayed]">$LOCALIZE[31511]</value>
		<value condition="$EXP[TempEvoMusicSongAlbumFP] | $EXP[TempEvoMusicDiskAlbumFP]">$LOCALIZE[558]</value>
		<value condition="$EXP[TempEvoMusicGenreSong]">$LOCALIZE[515]</value>
		<value condition="$EXP[TempEvoMusicYearSong]">$LOCALIZE[345]</value>
		<value condition="$EXP[TempEvoMusicSongTrack]">$LOCALIZE[554]</value>
		<value condition="$EXP[TempEvoMusicSongSingle]">$LOCALIZE[1050]</value>
		<value condition="$EXP[TempEvoMusicYear]">$LOCALIZE[345]</value>
		<value condition="$EXP[TempEvoMusicGenre]">$LOCALIZE[515]</value>
		<value>$INFO[Container.FolderName]</value>
	</variable>
	<variable name="TempEvoTitleViewPVR">
		<value condition="window.isactive(tvchannels)">$LOCALIZE[10700]</value>
		<value condition="window.isactive(radiochannels)">$LOCALIZE[10705]</value>
		<value condition="window.isactive(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<value condition="window.isactive(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="window.isactive(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
		<value condition="window.isactive(MyPVRGuide.xml)">$LOCALIZE[19069]</value>
		<value>$INFO[Container.FolderName]</value>
	</variable>
	<variable name="ListItemTypeSymbol">
		<value condition="ListItem.IsCollection"></value>
		<value condition="ListItem.HasVideoVersions"></value>
		<value condition="ListItem.HasVideoExtras"></value>
	</variable>
	<variable name="ListItemStatusSymbol">
		<value condition="[String.IsEqual(Listitem.DBType,tvshow) | String.IsEqual(Listitem.DBType,season)] + String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) | String.IsEqual(ListItem.DBtype,set) + String.IsEqual(ListItem.Property(Watched),ListItem.Property(Total))"></value>
		<value condition="String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,set) | String.IsEqual(ListItem.DBType,season)"></value>
		<value condition="ListItem.IsRecording"></value>
		<value condition="ListItem.HasReminder"></value>
		<value condition="ListItem.HasTimer"></value>
		<value condition="ListItem.IsPlaying"></value>
		<value condition="ListItem.IsResumable"></value>
		<value condition="ListItem.HasArchive"></value>
		<value condition="Integer.IsGreater(ListItem.Playcount,0)"></value>
	</variable>
	<variable name="ListItemWatchedStatus">
		<value condition="String.IsEqual(Listitem.DBType,tvshow) | String.IsEqual(Listitem.DBType,season)">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<value condition="String.IsEqual(Listitem.DBType,set)">$INFO[ListItem.Property(Watched)]$INFO[ListItem.Property(Total), / ,]</value>
		<value condition="ListItem.IsFolder + [Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)]">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
	</variable>
	<!--Player OSD-->
	<variable name="starRatingMusic">
		<value condition="String.IsEqual(MusicPlayer.UserRating,1)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,2)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,3)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,4)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,5)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,6)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,7)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,8)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,9)"></value>
		<value condition="String.IsEqual(MusicPlayer.UserRating,10)"></value>
		<value></value>
	</variable>
	<variable name="shuffleState">
		<value condition="Playlist.IsRandom">$LOCALIZE[16041]</value>
		<value condition="!Playlist.IsRandom">$LOCALIZE[16039]</value>
	</variable>
	<variable name="repeatState">
		<value condition="Playlist.IsRepeat">$LOCALIZE[597]</value>
		<value condition="Playlist.IsRepeatOne">$LOCALIZE[596]</value>
		<value condition="!Playlist.IsRepeat + !Playlist.IsRepeatOne">$LOCALIZE[595]</value>
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="VolumeMedia">
		<value condition="!Player.Muted + [Integer.IsGreater(Control.GetLabel(20),49) + Integer.IsLess(Control.GetLabel(20),100)]"></value>
		<value condition="!Player.Muted + Integer.IsGreater(Control.GetLabel(20),0) + Integer.IsLess(Control.GetLabel(20),50) + !Integer.IsEqual(Control.GetLabel(20),0)"></value>
		<value condition="!Player.Muted + Integer.IsEqual(Control.GetLabel(20),0)"></value>
		<value condition="Player.Muted + !String.IsEqual(Control.GetLabel(20),0)"></value>
		<value condition="!Player.Muted + String.IsEqual(Control.GetLabel(20),100)"></value>
		<value condition="Player.Muted + String.IsEqual(Control.GetLabel(20),100)"></value>
		<value></value>
	</variable>
	<variable name="PlayerControlsPausedVar">
		<value condition="Player.Paused"></value>
		<value></value>
	</variable>
	<variable name="PlayerControlsPausedLabelVar">
		<value condition="Player.Paused">$LOCALIZE[208]</value>
		<value>$LOCALIZE[31004]</value>
	</variable>
	<variable name="PlayerControlsRandomVar">
		<value condition="Playlist.IsRandom"></value>
		<value></value>
	</variable>
	<variable name="PlayerControlsRandomLabelVar">
		<value condition="Playlist.IsRandom">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[591]</value>
	</variable>
	<variable name="PlayerControlsRepeatVar">
		<value condition="Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeat"></value>
		<value></value>
	</variable>
	<variable name="PlayerControlsRepeatLabelVar">
		<value condition="Playlist.IsRepeatOne">$LOCALIZE[592]</value>
		<value condition="Playlist.IsRepeat">$LOCALIZE[593]</value>
		<value>$LOCALIZE[591]</value>
	</variable>
	<variable name="ResolutionVideoVar">
		<value condition="String.isEqual(VideoPlayer.VideoResolution,144)">qSD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,240)">qSD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,360)">qSD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,480)">SD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,540)">SD+</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,576)">qHD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,600)">WqHD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,720)">HD</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,768)">HD+</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,900)">HD+</value>
		<value condition="String.isEqual(VideoPlayer.VideoResolution,1080)">FHD</value>
		<value>$INFO[VideoPlayer.VideoResolution]</value>
	</variable>
	<!--skin background-->
	<variable name="UserVideosPathBackground">
		<value condition="String.IsEmpty(Skin.String(VideoBackgroundPath))">$VAR[UserImagePathBackground]</value>
		<value>$INFO[Skin.String(VideoBackgroundPath)]</value>
	</variable>
	<variable name="UserMultiImagePathBackground">
		<value condition="String.IsEmpty(Skin.String(MultiImageBackgroundPath))">$VAR[UserImagePathBackground]</value>
		<value>$INFO[Skin.String(MultiImageBackgroundPath)]</value>
	</variable>
	<variable name="UserImagePathBackground">
		<value condition="String.IsEmpty(Skin.String(ImageBackgroundPath))">$VAR[SolidColorPathBackground]</value>
		<value>$INFO[Skin.String(ImageBackgroundPath)]</value>
	</variable>
	<variable name="SolidColorPathBackground">
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundPola),2)">special://skin/extras/Backgrounds/Stylish.png</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundPola),1)">special://skin/extras/Backgrounds/DiamondW.png</value>
        <value>special://skin/extras/Backgrounds/Diamond.png</value>
	</variable>
	<variable name="SolidBlackSetOn">
        <value condition="![Skin.HasSetting(SolidBlackSetting)|Skin.HasSetting(SolidColorSetting)|Skin.HasSetting(DefaultPatternBGSetting)|Skin.HasSetting(UserImageSetting)|Skin.HasSetting(UserVideoSetting)]"></value>
        <value></value>
	</variable>
	<variable name="SolidColorSetOn">
        <value condition="Skin.HasSetting(SolidColorSetting)"></value>
        <value></value>
	</variable>
	<variable name="DefaultPatternBGSetOn">
        <value condition="Skin.HasSetting(DefaultPatternBGSetting)"></value>
        <value></value>
	</variable>
	<variable name="UserImageSetOn">
        <value condition="Skin.HasSetting(UserImageSetting)"></value>
        <value></value>
	</variable>
	<variable name="UserMultiImageSetOn">
		<value condition="Skin.HasSetting(UserMultiImageSetting)"></value>
		<value></value>
	</variable>
	<variable name="UserVideoSetOn">
		<value condition="Skin.HasSetting(UserVideoSetting)"></value>
		<value></value>
	</variable>
	<variable name="AspectKeepSetOn">
		<value condition="Skin.HasSetting(aspectratiowallpaperkeep)"></value>
		<value></value>
	</variable>
	<variable name="AspectScaleSetOn">
		<value condition="Skin.HasSetting(aspectratiowallpaperscale)"></value>
		<value></value>
	</variable>
	<variable name="AspectStretchSetOn">
		<value condition="Skin.HasSetting(aspectratiowallpaperstretch)"></value>
		<value></value>
	</variable>
	<variable name="AspectCenterSetOn">
		<value condition="Skin.HasSetting(aspectratiowallpapercenter)"></value>
		<value></value>
	</variable>
	<variable name="WallpaperOnBackgroundImagePath">
		<value condition="Skin.HasSetting(UserImageSetting)">$INFO[Skin.String(ImageBackgroundPath)]</value>
		<value condition="Skin.HasSetting(UserMultiImageSetting)">$INFO[Skin.String(MultiImageBackgroundPath)]</value>
		<value condition="Skin.HasSetting(UserVideoSetting)">content_has_been_removed</value>
		<value>special://skin/extras/homeBackgrounds/Default.png</value>
	</variable>
	<variable name="SkinSettingDummyDimness">
		<value condition="!String.IsEmpty(Skin.String(DummyDimnessSkin))">$INFO[Skin.String(DummyDimnessSkin)]</value>
		<value condition="String.IsEmpty(Skin.String(DummyDimnessSkin))">0</value> <!-- Default value -->
	</variable>
	<variable name="SkinSettingWallpaperDimness">
		<value condition="!String.IsEmpty(Skin.String(DimnessBackgroundUniversal))">$INFO[Skin.String(DimnessBackgroundUniversal)]</value>
		<value condition="String.IsEmpty(Skin.String(DimnessBackgroundUniversal))">50</value> <!-- Default value -->
	</variable>
	<variable name="TempEvoDialSelectVideoStreamLabelVar">
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39106], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39106], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isforced),true)">$LOCALIZE[39111], $LOCALIZE[39106]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39111], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39106], $LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)+String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39106], $LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.ishearingimpaired),true)">$LOCALIZE[39107]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isvisualimpaired),true)">$LOCALIZE[39108]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isforced),true)">$LOCALIZE[39106]</value>
		<value condition="String.IsEqual(ListItem.Property(stream.isoriginal),true)">$LOCALIZE[39111]</value>
	</variable>
	<variable name="ListItemLabelforPVR">
		<value condition="ListItem.IsFolder">[COLOR grey]$INFO[ListItem.Timertype][/COLOR]</value>
		<value condition="$EXP[listitem_has_episode_info] + !String.IsEmpty(ListItem.EpgEventTitle) + !String.StartsWith(ListItem.EpisodeName,ListItem.EpgEventTitle)">$INFO[ListItem.EpgEventTitle] | [COLOR grey]$VAR[SeasonEpisodeLabel]$INFO[ListItem.EpisodeName][/COLOR]</value>
		<value condition="$EXP[listitem_has_episode_info]">[COLOR grey]$VAR[SeasonEpisodeLabel]$INFO[ListItem.EpisodeName][/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.TitleExtraInfo) + !String.StartsWith(ListItem.TitleExtraInfo,ListItem.EpgEventTitle)">$INFO[ListItem.EpgEventTitle]$INFO[ListItem.TitleExtraInfo, | [COLOR grey],[/COLOR]]</value>
		<value condition="!String.IsEmpty(ListItem.TitleExtraInfo)">[COLOR grey]$INFO[ListItem.TitleExtraInfo][/COLOR]</value>
		<value>$INFO[ListItem.EpgEventTitle]</value>
	</variable>
	<variable name="ListItemLabelforPVR2">
		<value condition="ListItem.IsFolder">$INFO[ListItem.Timertype]</value>
		<value condition="$EXP[listitem_has_episode_info] + !String.IsEmpty(ListItem.EpgEventTitle) + !String.StartsWith(ListItem.EpisodeName,ListItem.EpgEventTitle)">$INFO[ListItem.EpgEventTitle] | [COLOR grey]$VAR[SeasonEpisodeLabel]$INFO[ListItem.EpisodeName][/COLOR]</value>
		<value condition="$EXP[listitem_has_episode_info]">$VAR[SeasonEpisodeLabel]$INFO[ListItem.EpisodeName]</value>
		<value condition="!String.IsEmpty(ListItem.TitleExtraInfo) + !String.StartsWith(ListItem.TitleExtraInfo,ListItem.EpgEventTitle)">$INFO[ListItem.EpgEventTitle]$INFO[ListItem.TitleExtraInfo, | [COLOR grey],[/COLOR]]</value>
		<value condition="!String.IsEmpty(ListItem.TitleExtraInfo)">$INFO[ListItem.TitleExtraInfo]</value>
		<value>$INFO[ListItem.EpgEventTitle]</value>
	</variable>
	<variable name="SeasonEpisodeLabel">
		<value condition="String.IsEmpty(ListItem.EpisodeName)">$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E]</value>
		<value>$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E,: ]</value>
	</variable>
	<variable name="FirstAiredLabel">
		<value condition="String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[20473]</value>
		<value>$LOCALIZE[20416]</value>
	</variable>
	<variable name="PremieredLabel">
		<value>$INFO[ListItem.Premiered,[COLOR grey]$LOCALIZE[20416]:[/COLOR] ,[CR]]</value>
	</variable>
	<variable name="PlaylistLabel2">
		<value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="FlagLabel">
		<value condition="ListItem.IsPremiere">[B][COLOR button_focus]$LOCALIZE[838][/COLOR][/B]</value>
		<value condition="ListItem.IsFinale">[B][COLOR button_focus]$LOCALIZE[849][/COLOR][/B]</value>
		<value condition="ListItem.IsLive">[B][COLOR button_focus]$LOCALIZE[839][/COLOR][/B]</value>
		<value condition="ListItem.IsNew">[B][COLOR button_focus]$LOCALIZE[842][/COLOR][/B]</value>
	</variable>
	<variable name="FlagDashLabel">
		<value condition="ListItem.IsPremiere + String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode) + String.IsEmpty(ListItem.EpisodeName)">[B][COLOR overlay]$LOCALIZE[838][/COLOR][/B]</value>
		<value condition="ListItem.IsPremiere">[B][COLOR overlay]$LOCALIZE[838][/COLOR][/B] - </value>
		<value condition="ListItem.IsFinale + String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode) + String.IsEmpty(ListItem.EpisodeName)">[B][COLOR overlay]$LOCALIZE[849][/COLOR][/B]</value>
		<value condition="ListItem.IsFinale">[B][COLOR overlay]$LOCALIZE[849][/COLOR][/B] - </value>
		<value condition="ListItem.IsLive + String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode) + String.IsEmpty(ListItem.EpisodeName)">[B][COLOR overlay]$LOCALIZE[839][/COLOR][/B]</value>
		<value condition="ListItem.IsLive">[B][COLOR overlay]$LOCALIZE[839][/COLOR][/B] - </value>
		<value condition="ListItem.IsNew + String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode) + String.IsEmpty(ListItem.EpisodeName)">[B][COLOR overlay]$LOCALIZE[842][/COLOR][/B]</value>
		<value condition="ListItem.IsNew">[B][COLOR overlay]$LOCALIZE[842][/COLOR][/B] - </value>
	</variable>
	<variable name="SeparatorTimeVar">
		<value condition="String.IsEqual(System.Language,Indonesian)">.</value>
		<value>:</value>
	</variable>
	<variable name="SkinLockscreenAutolockTime">
		<value condition="!String.IsEmpty(Skin.String(LockscreenAutolockTime))">$INFO[Skin.String(LockscreenAutolockTime)]</value>
		<value condition="String.IsEmpty(Skin.String(LockscreenAutolockTime))">10</value> <!-- Default value -->
	</variable>
</includes>
